{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\paresh\\\\WebDevelopmentProjects\\\\Restaurant_Automation\\\\Frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\paresh\\\\WebDevelopmentProjects\\\\Restaurant_Automation\\\\Frontend\\\\src\\\\components\\\\Navbars\\\\Navbar.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport QRRead from \"../QR/QR.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\nimport \"./styles.css\";\nimport { withRouter } from \"react-router-dom\";\nvar useStyles = makeStyles(styles);\nexport default function Header(props) {\n  var classes = useStyles();\n\n  function makeBrand() {\n    var name;\n    props.routes.map(function (prop) {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = props.rtlActive ? prop.rtlName : prop.name;\n      }\n\n      return null;\n    });\n    return name;\n  }\n\n  function scanQr() {\n    var name;\n    props.routes.map(function (prop) {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = \"/qr\";\n      }\n\n      return null;\n    });\n    return name;\n  }\n\n  var color = props.color;\n  var appBarClasses = classNames(_defineProperty({}, \" \" + classes[color], color));\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar + appBarClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"transparent\",\n    href: \"#\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, makeBrand())), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.rtlActive ? /*#__PURE__*/React.createElement(RTLNavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(AdminNavbarLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: props.handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"colorButton\",\n    onClick: QRRead.scanQr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"QR\")));\n}\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};","map":{"version":3,"sources":["C:/Users/paresh/WebDevelopmentProjects/Restaurant_Automation/Frontend/src/components/Navbars/Navbar.js"],"names":["React","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Hidden","Menu","AdminNavbarLinks","RTLNavbarLinks","Button","QRRead","styles","withRouter","useStyles","Header","props","classes","makeBrand","name","routes","map","prop","window","location","href","indexOf","layout","path","rtlActive","rtlName","scanQr","color","appBarClasses","appBar","container","flex","title","handleDrawerToggle","propTypes","oneOf","bool","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport QRRead from \"../QR/QR.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\r\nimport \"./styles.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  function makeBrand() {\r\n    var name;\r\n    props.routes.map((prop) => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        name = props.rtlActive ? prop.rtlName : prop.name;\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n\r\n  function scanQr() {\r\n    var name;\r\n    props.routes.map((prop) => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        name = \"/qr\";\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n\r\n  const { color } = props;\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color,\r\n  });\r\n\r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {makeBrand()}\r\n          </Button>\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n        <button className=\"colorButton\" onClick={QRRead.scanQr}>\r\n          QR\r\n        </button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}